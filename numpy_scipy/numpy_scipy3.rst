ファイルの読み書き
==========================
様々な形式で記録された実験データ等をファイルに読み込みたい，解析したデータを保存しておきたい，という要望のために，ファイルの読み書きについて簡単に紹介します．
NumPyではファイル形式にバイナリとテキストを選び，ファイルの読み書きを行うことができます． 

バイナリ形式での読み書き
--------------------------
バイナリ形式の読み書きには，np.load, np.save, np.savez, np.savez_compressedを使い，以下のような特徴があります．

* ndarray配列をそのまま保存できる．３次元以上の配列も保存可能
* 対応拡張子はpickle, npz, npy
* 扱うファイル形式は他のアプリケーションとの互換性はほとんどない

それぞれについて，例とともに簡単な使い方を紹介していきます．

numpy.save, numpy.load
^^^^^^^^^^^^^^^^^^^^^^^^^^
np.saveとnp.loadは効率的にndarrayを読み書きできます．
デフォルト設定では非圧縮のバイナリ形式で保存され，拡張子は.npyになります．

.. ipython:: python

    a = np.arange(5)
    np.save('array', a)

このように，ファイルパスに拡張子を指定しない場合は，自動で.npyが付加されます．
作成したファイルを読み込むにはファイルパスを指定します．

.. ipython:: python

    np.load('array.npy')

numpy.savez, numpy.savez_compressed
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
np.savezは，複数のndarrayを非圧縮のzip形式で保存することができます．
一方，np.savez_compressedは，複数のndarrayを ``zipfile.ZIP_DEFLATE`` により圧縮されたzip形式で保存することができます．
両者ともに，個々のndarrayはキーワードを指定して区別します．
なお，読み込みはともにnp.loadにより行うことができます．

.. ipython:: python

    b = np.array([[1, 2, 3], [4, 5, 6]])
    np.savez('array2.npz', a=a, b2=b)   #bにb2という名前をつけて保存

拡張子.npzのファイルはnp.loadで読み込みます．
ndarrayを読み込むには，キーワードを指定します．
なお，この読み込みは遅延読み込みであり，データは参照された時点で初めてロードされます．

.. ipython:: python

    arr = np.load('array2.npz')
    arr['b2']

テキスト形式での読み書き
-------------------------
Python以外の言語や，その他のソフトウェアで使用する場合など，テキスト形式での保存が便利です．
NumPyではテキスト形式での読み書きにnp.loadtxt, np.savetxtを使用します．

numpy.loadtxt, numpy.savetxt関数の特徴
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
テキスト形式での読み書きには，以下の特徴があります．

* 他のアプリケーションと互換性のある.dat, .csv, .txt形式のファイルの読み書きができる
* 保存できる配列の次元は２次元まで

それでは，配列を生成してテキスト形式で書き込んでみましょう．

.. ipython:: python

    c = np.random.randn(4, 5)   #標準正規分布に従った乱数を２次元配列で生成
    np.savetxt('array3.txt', c)

保存したデータを読み込んでみます．

.. ipython:: python

    d = np.loadtxt('array3.txt')
    c
    d

次は，区切り文字を 「, 」 にして保存してみます．

.. ipython:: python

    np.savetxt('array4.txt', c, delimiter=',')

保存されたファイルを開いて確認してみましょう．

.. include:: array4.txt

先に保存したarray3.txtは以下のようになっています．

.. include:: array3.txt

こちらは，区切り文字を指定していないので，デフォルト設定のスペースでデータが区切られています．
なお，「,」で区切ったテキストファイルを読み込むには ``delimiter=','`` と指定しないといけません．

.. ipython:: python
    
    e = np.loadtxt('array4.txt', delimiter=',')
    e

.. genfromtxtはデータファイルに数値と文字列の両方が入っている場合に利用すると便利です．
以下にNumPyを用いたファイル入出力を表にまとめておきます．

+------------------+----------+--------+--------+--------------+
| 読み込み         | 書き込み | 形式   | 拡張子 | 備考         |
+==================+==========+========+========+==============+
| save             | load     | binary | npy    | 非圧縮       |
+------------------+----------+--------+--------+--------------+
| savetxt          | loadtxt  | text   |        | 非圧縮       |
+------------------+----------+--------+--------+--------------+
| savez            | load     | binary | npz    | 非圧縮・複数 |
+------------------+----------+--------+--------+--------------+
| savez_compressed | load     | binary | npz    | 圧縮・複数   |
+------------------+----------+--------+--------+--------------+

